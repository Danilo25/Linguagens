Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: func_decl
    3          | decl_list func_decl

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE
    5          | type ID LPAREN param_list_opt RPAREN SEMICOLON

    6 param_list_opt: ε
    7               | param_list

    8 param_list: param
    9           | param_list COMMA param

   10 param: type ID
   11      | REF type ID

   12 stmt_list: ε
   13          | stmt_list stmt

   14 stmt: var_decl_stmt
   15     | assignment_stmt
   16     | print_stmt
   17     | return_stmt
   18     | func_call_stmt
   19     | if_stmt
   20     | while_stmt

   21 var_decl_stmt: type ID SEMICOLON
   22              | type ID ARROW_LEFT expr SEMICOLON

   23 lvalue: ID
   24       | MUL ID

   25 assignment_stmt: lvalue ARROW_LEFT expr SEMICOLON

   26 func_call_stmt: func_call SEMICOLON

   27 print_stmt: PRINT expr SEMICOLON

   28 return_stmt: RETURN expr SEMICOLON

   29 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE

   30 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE

   31 type: INT
   32     | FLOAT
   33     | UNIT
   34     | RATIONAL
   35     | MATRIX

   36 expr: expr PLUS expr
   37     | expr MINUS expr
   38     | expr MUL expr
   39     | expr DIV expr
   40     | expr LT expr
   41     | expr LE expr
   42     | expr GT expr
   43     | expr GE expr
   44     | expr EQ expr
   45     | expr NE expr
   46     | LPAREN expr RPAREN
   47     | AMPERSAND ID
   48     | ID
   49     | INT_LIT
   50     | FLOAT_LIT
   51     | func_call

   52 func_call: ID LPAREN arg_list_opt RPAREN

   53 arg_list_opt: ε
   54             | arg_list

   55 arg_list: expr
   56         | arg_list COMMA expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    UNIT (258) 33
    FLOAT (259) 32
    INT (260) 31
    RATIONAL (261) 34
    MATRIX (262) 35
    PRINT (263) 27
    RETURN (264) 28
    IF (265) 29
    WHILE (266) 30
    REF (267) 11
    AMPERSAND (268) 47
    ARROW_LEFT (269) 22 25
    PLUS (270) 36
    MINUS (271) 37
    MUL (272) 24 38
    DIV (273) 39
    LT (274) 40
    LE (275) 41
    GT (276) 42
    GE (277) 43
    EQ (278) 44
    NE (279) 45
    SEMICOLON (280) 5 21 22 25 26 27 28
    LPAREN (281) 4 5 29 30 46 52
    RPAREN (282) 4 5 29 30 46 52
    LBRACE (283) 4 29 30
    RBRACE (284) 4 29 30
    COMMA (285) 9 56
    ID <str_val> (286) 4 5 10 11 21 22 23 24 47 48 52
    INT_LIT <int_val> (287) 49
    FLOAT_LIT <float_val> (288) 50


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program <rec> (35)
        on left: 1
        on right: 0
    decl_list <rec> (36)
        on left: 2 3
        on right: 1 3
    func_decl <rec> (37)
        on left: 4 5
        on right: 2 3
    param_list_opt <rec> (38)
        on left: 6 7
        on right: 4 5
    param_list <rec> (39)
        on left: 8 9
        on right: 7 9
    param <rec> (40)
        on left: 10 11
        on right: 8 9
    stmt_list <rec> (41)
        on left: 12 13
        on right: 4 13 29 30
    stmt <rec> (42)
        on left: 14 15 16 17 18 19 20
        on right: 13
    var_decl_stmt <rec> (43)
        on left: 21 22
        on right: 14
    lvalue <rec> (44)
        on left: 23 24
        on right: 25
    assignment_stmt <rec> (45)
        on left: 25
        on right: 15
    func_call_stmt <rec> (46)
        on left: 26
        on right: 18
    print_stmt <rec> (47)
        on left: 27
        on right: 16
    return_stmt <rec> (48)
        on left: 28
        on right: 17
    if_stmt <rec> (49)
        on left: 29
        on right: 19
    while_stmt <rec> (50)
        on left: 30
        on right: 20
    type <rec> (51)
        on left: 31 32 33 34 35
        on right: 4 5 10 11 21 22
    expr <rec> (52)
        on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 22 25 27 28 29 30 36 37 38 39 40 41 42 43 44 45 46 55 56
    func_call <rec> (53)
        on left: 52
        on right: 26 51
    arg_list_opt <rec> (54)
        on left: 53 54
        on right: 52
    arg_list <rec> (55)
        on left: 55 56
        on right: 54 56


State 0

    0 $accept: • program $end

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5

    program    go to state 6
    decl_list  go to state 7
    func_decl  go to state 8
    type       go to state 9


State 1

   33 type: UNIT •

    $default  reduce using rule 33 (type)


State 2

   32 type: FLOAT •

    $default  reduce using rule 32 (type)


State 3

   31 type: INT •

    $default  reduce using rule 31 (type)


State 4

   34 type: RATIONAL •

    $default  reduce using rule 34 (type)


State 5

   35 type: MATRIX •

    $default  reduce using rule 35 (type)


State 6

    0 $accept: program • $end

    $end  shift, and go to state 10


State 7

    1 program: decl_list •
    3 decl_list: decl_list • func_decl

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5

    $default  reduce using rule 1 (program)

    func_decl  go to state 11
    type       go to state 9


State 8

    2 decl_list: func_decl •

    $default  reduce using rule 2 (decl_list)


State 9

    4 func_decl: type • ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE
    5          | type • ID LPAREN param_list_opt RPAREN SEMICOLON

    ID  shift, and go to state 12


State 10

    0 $accept: program $end •

    $default  accept


State 11

    3 decl_list: decl_list func_decl •

    $default  reduce using rule 3 (decl_list)


State 12

    4 func_decl: type ID • LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE
    5          | type ID • LPAREN param_list_opt RPAREN SEMICOLON

    LPAREN  shift, and go to state 13


State 13

    4 func_decl: type ID LPAREN • param_list_opt RPAREN LBRACE stmt_list RBRACE
    5          | type ID LPAREN • param_list_opt RPAREN SEMICOLON

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    REF       shift, and go to state 14

    $default  reduce using rule 6 (param_list_opt)

    param_list_opt  go to state 15
    param_list      go to state 16
    param           go to state 17
    type            go to state 18


State 14

   11 param: REF • type ID

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5

    type  go to state 19


State 15

    4 func_decl: type ID LPAREN param_list_opt • RPAREN LBRACE stmt_list RBRACE
    5          | type ID LPAREN param_list_opt • RPAREN SEMICOLON

    RPAREN  shift, and go to state 20


State 16

    7 param_list_opt: param_list •
    9 param_list: param_list • COMMA param

    COMMA  shift, and go to state 21

    $default  reduce using rule 7 (param_list_opt)


State 17

    8 param_list: param •

    $default  reduce using rule 8 (param_list)


State 18

   10 param: type • ID

    ID  shift, and go to state 22


State 19

   11 param: REF type • ID

    ID  shift, and go to state 23


State 20

    4 func_decl: type ID LPAREN param_list_opt RPAREN • LBRACE stmt_list RBRACE
    5          | type ID LPAREN param_list_opt RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 24
    LBRACE     shift, and go to state 25


State 21

    9 param_list: param_list COMMA • param

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    REF       shift, and go to state 14

    param  go to state 26
    type   go to state 18


State 22

   10 param: type ID •

    $default  reduce using rule 10 (param)


State 23

   11 param: REF type ID •

    $default  reduce using rule 11 (param)


State 24

    5 func_decl: type ID LPAREN param_list_opt RPAREN SEMICOLON •

    $default  reduce using rule 5 (func_decl)


State 25

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 27


State 26

    9 param_list: param_list COMMA param •

    $default  reduce using rule 9 (param_list)


State 27

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list • RBRACE
   13 stmt_list: stmt_list • stmt

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    PRINT     shift, and go to state 28
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    MUL       shift, and go to state 32
    RBRACE    shift, and go to state 33
    ID        shift, and go to state 34

    stmt             go to state 35
    var_decl_stmt    go to state 36
    lvalue           go to state 37
    assignment_stmt  go to state 38
    func_call_stmt   go to state 39
    print_stmt       go to state 40
    return_stmt      go to state 41
    if_stmt          go to state 42
    while_stmt       go to state 43
    type             go to state 44
    func_call        go to state 45


State 28

   27 print_stmt: PRINT • expr SEMICOLON

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 51
    func_call  go to state 52


State 29

   28 return_stmt: RETURN • expr SEMICOLON

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 53
    func_call  go to state 52


State 30

   29 if_stmt: IF • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 54


State 31

   30 while_stmt: WHILE • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 55


State 32

   24 lvalue: MUL • ID

    ID  shift, and go to state 56


State 33

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 4 (func_decl)


State 34

   23 lvalue: ID •
   52 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 57

    $default  reduce using rule 23 (lvalue)


State 35

   13 stmt_list: stmt_list stmt •

    $default  reduce using rule 13 (stmt_list)


State 36

   14 stmt: var_decl_stmt •

    $default  reduce using rule 14 (stmt)


State 37

   25 assignment_stmt: lvalue • ARROW_LEFT expr SEMICOLON

    ARROW_LEFT  shift, and go to state 58


State 38

   15 stmt: assignment_stmt •

    $default  reduce using rule 15 (stmt)


State 39

   18 stmt: func_call_stmt •

    $default  reduce using rule 18 (stmt)


State 40

   16 stmt: print_stmt •

    $default  reduce using rule 16 (stmt)


State 41

   17 stmt: return_stmt •

    $default  reduce using rule 17 (stmt)


State 42

   19 stmt: if_stmt •

    $default  reduce using rule 19 (stmt)


State 43

   20 stmt: while_stmt •

    $default  reduce using rule 20 (stmt)


State 44

   21 var_decl_stmt: type • ID SEMICOLON
   22              | type • ID ARROW_LEFT expr SEMICOLON

    ID  shift, and go to state 59


State 45

   26 func_call_stmt: func_call • SEMICOLON

    SEMICOLON  shift, and go to state 60


State 46

   47 expr: AMPERSAND • ID

    ID  shift, and go to state 61


State 47

   46 expr: LPAREN • expr RPAREN

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 62
    func_call  go to state 52


State 48

   48 expr: ID •
   52 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 57

    $default  reduce using rule 48 (expr)


State 49

   49 expr: INT_LIT •

    $default  reduce using rule 49 (expr)


State 50

   50 expr: FLOAT_LIT •

    $default  reduce using rule 50 (expr)


State 51

   27 print_stmt: PRINT expr • SEMICOLON
   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MUL        shift, and go to state 65
    DIV        shift, and go to state 66
    LT         shift, and go to state 67
    LE         shift, and go to state 68
    GT         shift, and go to state 69
    GE         shift, and go to state 70
    EQ         shift, and go to state 71
    NE         shift, and go to state 72
    SEMICOLON  shift, and go to state 73


State 52

   51 expr: func_call •

    $default  reduce using rule 51 (expr)


State 53

   28 return_stmt: RETURN expr • SEMICOLON
   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MUL        shift, and go to state 65
    DIV        shift, and go to state 66
    LT         shift, and go to state 67
    LE         shift, and go to state 68
    GT         shift, and go to state 69
    GE         shift, and go to state 70
    EQ         shift, and go to state 71
    NE         shift, and go to state 72
    SEMICOLON  shift, and go to state 74


State 54

   29 if_stmt: IF LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 75
    func_call  go to state 52


State 55

   30 while_stmt: WHILE LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 76
    func_call  go to state 52


State 56

   24 lvalue: MUL ID •

    $default  reduce using rule 24 (lvalue)


State 57

   52 func_call: ID LPAREN • arg_list_opt RPAREN

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    $default  reduce using rule 53 (arg_list_opt)

    expr          go to state 77
    func_call     go to state 52
    arg_list_opt  go to state 78
    arg_list      go to state 79


State 58

   25 assignment_stmt: lvalue ARROW_LEFT • expr SEMICOLON

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 80
    func_call  go to state 52


State 59

   21 var_decl_stmt: type ID • SEMICOLON
   22              | type ID • ARROW_LEFT expr SEMICOLON

    ARROW_LEFT  shift, and go to state 81
    SEMICOLON   shift, and go to state 82


State 60

   26 func_call_stmt: func_call SEMICOLON •

    $default  reduce using rule 26 (func_call_stmt)


State 61

   47 expr: AMPERSAND ID •

    $default  reduce using rule 47 (expr)


State 62

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr
   46     | LPAREN expr • RPAREN

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    MUL     shift, and go to state 65
    DIV     shift, and go to state 66
    LT      shift, and go to state 67
    LE      shift, and go to state 68
    GT      shift, and go to state 69
    GE      shift, and go to state 70
    EQ      shift, and go to state 71
    NE      shift, and go to state 72
    RPAREN  shift, and go to state 83


State 63

   36 expr: expr PLUS • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 84
    func_call  go to state 52


State 64

   37 expr: expr MINUS • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 85
    func_call  go to state 52


State 65

   38 expr: expr MUL • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 86
    func_call  go to state 52


State 66

   39 expr: expr DIV • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 87
    func_call  go to state 52


State 67

   40 expr: expr LT • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 88
    func_call  go to state 52


State 68

   41 expr: expr LE • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 89
    func_call  go to state 52


State 69

   42 expr: expr GT • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 90
    func_call  go to state 52


State 70

   43 expr: expr GE • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 91
    func_call  go to state 52


State 71

   44 expr: expr EQ • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 92
    func_call  go to state 52


State 72

   45 expr: expr NE • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 93
    func_call  go to state 52


State 73

   27 print_stmt: PRINT expr SEMICOLON •

    $default  reduce using rule 27 (print_stmt)


State 74

   28 return_stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 28 (return_stmt)


State 75

   29 if_stmt: IF LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    MUL     shift, and go to state 65
    DIV     shift, and go to state 66
    LT      shift, and go to state 67
    LE      shift, and go to state 68
    GT      shift, and go to state 69
    GE      shift, and go to state 70
    EQ      shift, and go to state 71
    NE      shift, and go to state 72
    RPAREN  shift, and go to state 94


State 76

   30 while_stmt: WHILE LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    PLUS    shift, and go to state 63
    MINUS   shift, and go to state 64
    MUL     shift, and go to state 65
    DIV     shift, and go to state 66
    LT      shift, and go to state 67
    LE      shift, and go to state 68
    GT      shift, and go to state 69
    GE      shift, and go to state 70
    EQ      shift, and go to state 71
    NE      shift, and go to state 72
    RPAREN  shift, and go to state 95


State 77

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr
   55 arg_list: expr •

    PLUS   shift, and go to state 63
    MINUS  shift, and go to state 64
    MUL    shift, and go to state 65
    DIV    shift, and go to state 66
    LT     shift, and go to state 67
    LE     shift, and go to state 68
    GT     shift, and go to state 69
    GE     shift, and go to state 70
    EQ     shift, and go to state 71
    NE     shift, and go to state 72

    $default  reduce using rule 55 (arg_list)


State 78

   52 func_call: ID LPAREN arg_list_opt • RPAREN

    RPAREN  shift, and go to state 96


State 79

   54 arg_list_opt: arg_list •
   56 arg_list: arg_list • COMMA expr

    COMMA  shift, and go to state 97

    $default  reduce using rule 54 (arg_list_opt)


State 80

   25 assignment_stmt: lvalue ARROW_LEFT expr • SEMICOLON
   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MUL        shift, and go to state 65
    DIV        shift, and go to state 66
    LT         shift, and go to state 67
    LE         shift, and go to state 68
    GT         shift, and go to state 69
    GE         shift, and go to state 70
    EQ         shift, and go to state 71
    NE         shift, and go to state 72
    SEMICOLON  shift, and go to state 98


State 81

   22 var_decl_stmt: type ID ARROW_LEFT • expr SEMICOLON

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 99
    func_call  go to state 52


State 82

   21 var_decl_stmt: type ID SEMICOLON •

    $default  reduce using rule 21 (var_decl_stmt)


State 83

   46 expr: LPAREN expr RPAREN •

    $default  reduce using rule 46 (expr)


State 84

   36 expr: expr • PLUS expr
   36     | expr PLUS expr •
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    LT   shift, and go to state 67
    LE   shift, and go to state 68
    GT   shift, and go to state 69
    GE   shift, and go to state 70
    EQ   shift, and go to state 71
    NE   shift, and go to state 72

    $default  reduce using rule 36 (expr)


State 85

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   37     | expr MINUS expr •
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    LT   shift, and go to state 67
    LE   shift, and go to state 68
    GT   shift, and go to state 69
    GE   shift, and go to state 70
    EQ   shift, and go to state 71
    NE   shift, and go to state 72

    $default  reduce using rule 37 (expr)


State 86

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   38     | expr MUL expr •
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    LT  shift, and go to state 67
    LE  shift, and go to state 68
    GT  shift, and go to state 69
    GE  shift, and go to state 70
    EQ  shift, and go to state 71
    NE  shift, and go to state 72

    $default  reduce using rule 38 (expr)


State 87

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   39     | expr DIV expr •
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    LT  shift, and go to state 67
    LE  shift, and go to state 68
    GT  shift, and go to state 69
    GE  shift, and go to state 70
    EQ  shift, and go to state 71
    NE  shift, and go to state 72

    $default  reduce using rule 39 (expr)


State 88

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   40     | expr LT expr •
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    $default  reduce using rule 40 (expr)


State 89

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   41     | expr LE expr •
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    $default  reduce using rule 41 (expr)


State 90

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   42     | expr GT expr •
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    $default  reduce using rule 42 (expr)


State 91

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   43     | expr GE expr •
   44     | expr • EQ expr
   45     | expr • NE expr

    $default  reduce using rule 43 (expr)


State 92

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   44     | expr EQ expr •
   45     | expr • NE expr

    $default  reduce using rule 44 (expr)


State 93

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr
   45     | expr NE expr •

    $default  reduce using rule 45 (expr)


State 94

   29 if_stmt: IF LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 100


State 95

   30 while_stmt: WHILE LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 101


State 96

   52 func_call: ID LPAREN arg_list_opt RPAREN •

    $default  reduce using rule 52 (func_call)


State 97

   56 arg_list: arg_list COMMA • expr

    AMPERSAND  shift, and go to state 46
    LPAREN     shift, and go to state 47
    ID         shift, and go to state 48
    INT_LIT    shift, and go to state 49
    FLOAT_LIT  shift, and go to state 50

    expr       go to state 102
    func_call  go to state 52


State 98

   25 assignment_stmt: lvalue ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 25 (assignment_stmt)


State 99

   22 var_decl_stmt: type ID ARROW_LEFT expr • SEMICOLON
   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr

    PLUS       shift, and go to state 63
    MINUS      shift, and go to state 64
    MUL        shift, and go to state 65
    DIV        shift, and go to state 66
    LT         shift, and go to state 67
    LE         shift, and go to state 68
    GT         shift, and go to state 69
    GE         shift, and go to state 70
    EQ         shift, and go to state 71
    NE         shift, and go to state 72
    SEMICOLON  shift, and go to state 103


State 100

   29 if_stmt: IF LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 104


State 101

   30 while_stmt: WHILE LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 12 (stmt_list)

    stmt_list  go to state 105


State 102

   36 expr: expr • PLUS expr
   37     | expr • MINUS expr
   38     | expr • MUL expr
   39     | expr • DIV expr
   40     | expr • LT expr
   41     | expr • LE expr
   42     | expr • GT expr
   43     | expr • GE expr
   44     | expr • EQ expr
   45     | expr • NE expr
   56 arg_list: arg_list COMMA expr •

    PLUS   shift, and go to state 63
    MINUS  shift, and go to state 64
    MUL    shift, and go to state 65
    DIV    shift, and go to state 66
    LT     shift, and go to state 67
    LE     shift, and go to state 68
    GT     shift, and go to state 69
    GE     shift, and go to state 70
    EQ     shift, and go to state 71
    NE     shift, and go to state 72

    $default  reduce using rule 56 (arg_list)


State 103

   22 var_decl_stmt: type ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 22 (var_decl_stmt)


State 104

   13 stmt_list: stmt_list • stmt
   29 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    PRINT     shift, and go to state 28
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    MUL       shift, and go to state 32
    RBRACE    shift, and go to state 106
    ID        shift, and go to state 34

    stmt             go to state 35
    var_decl_stmt    go to state 36
    lvalue           go to state 37
    assignment_stmt  go to state 38
    func_call_stmt   go to state 39
    print_stmt       go to state 40
    return_stmt      go to state 41
    if_stmt          go to state 42
    while_stmt       go to state 43
    type             go to state 44
    func_call        go to state 45


State 105

   13 stmt_list: stmt_list • stmt
   30 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    PRINT     shift, and go to state 28
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    MUL       shift, and go to state 32
    RBRACE    shift, and go to state 107
    ID        shift, and go to state 34

    stmt             go to state 35
    var_decl_stmt    go to state 36
    lvalue           go to state 37
    assignment_stmt  go to state 38
    func_call_stmt   go to state 39
    print_stmt       go to state 40
    return_stmt      go to state 41
    if_stmt          go to state 42
    while_stmt       go to state 43
    type             go to state 44
    func_call        go to state 45


State 106

   29 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 29 (if_stmt)


State 107

   30 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 30 (while_stmt)
