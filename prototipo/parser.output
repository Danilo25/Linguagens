Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: func_decl
    3          | decl_list func_decl

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    5 param_list_opt: ε
    6               | param_list

    7 param_list: param
    8           | param_list COMMA param

    9 param: type ID

   10 stmt_list: ε
   11          | stmt_list stmt

   12 stmt: var_decl_stmt
   13     | assignment_stmt
   14     | print_stmt
   15     | return_stmt
   16     | func_call_stmt
   17     | if_stmt
   18     | while_stmt

   19 var_decl_stmt: type ID SEMICOLON
   20              | type ID ARROW_LEFT expr SEMICOLON

   21 assignment_stmt: ID ARROW_LEFT expr SEMICOLON

   22 func_call_stmt: func_call SEMICOLON

   23 print_stmt: PRINT expr SEMICOLON

   24 return_stmt: RETURN expr SEMICOLON

   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE

   27 type: INT
   28     | FLOAT
   29     | UNIT
   30     | RATIONAL
   31     | MATRIX

   32 expr: expr PLUS expr
   33     | expr MINUS expr
   34     | expr MUL expr
   35     | expr DIV expr
   36     | expr LT expr
   37     | expr LE expr
   38     | expr GT expr
   39     | expr GE expr
   40     | expr EQ expr
   41     | expr NE expr
   42     | LPAREN expr RPAREN
   43     | ID
   44     | INT_LIT
   45     | FLOAT_LIT
   46     | func_call

   47 func_call: ID LPAREN arg_list_opt RPAREN

   48 arg_list_opt: ε
   49             | arg_list

   50 arg_list: expr
   51         | arg_list COMMA expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    UNIT (258) 29
    FLOAT (259) 28
    INT (260) 27
    RATIONAL (261) 30
    MATRIX (262) 31
    PRINT (263) 23
    RETURN (264) 24
    IF (265) 25
    WHILE (266) 26
    ARROW_LEFT (267) 20 21
    PLUS (268) 32
    MINUS (269) 33
    MUL (270) 34
    DIV (271) 35
    LT (272) 36
    LE (273) 37
    GT (274) 38
    GE (275) 39
    EQ (276) 40
    NE (277) 41
    SEMICOLON (278) 19 20 21 22 23 24
    LPAREN (279) 4 25 26 42 47
    RPAREN (280) 4 25 26 42 47
    LBRACE (281) 4 25 26
    RBRACE (282) 4 25 26
    COMMA (283) 8 51
    ID <str_val> (284) 4 9 19 20 21 43 47
    INT_LIT <int_val> (285) 44
    FLOAT_LIT <float_val> (286) 45


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program <rec> (33)
        on left: 1
        on right: 0
    decl_list <rec> (34)
        on left: 2 3
        on right: 1 3
    func_decl <rec> (35)
        on left: 4
        on right: 2 3
    param_list_opt <rec> (36)
        on left: 5 6
        on right: 4
    param_list <rec> (37)
        on left: 7 8
        on right: 6 8
    param <rec> (38)
        on left: 9
        on right: 7 8
    stmt_list <rec> (39)
        on left: 10 11
        on right: 4 11 25 26
    stmt <rec> (40)
        on left: 12 13 14 15 16 17 18
        on right: 11
    var_decl_stmt <rec> (41)
        on left: 19 20
        on right: 12
    assignment_stmt <rec> (42)
        on left: 21
        on right: 13
    func_call_stmt <rec> (43)
        on left: 22
        on right: 16
    print_stmt <rec> (44)
        on left: 23
        on right: 14
    return_stmt <rec> (45)
        on left: 24
        on right: 15
    if_stmt <rec> (46)
        on left: 25
        on right: 17
    while_stmt <rec> (47)
        on left: 26
        on right: 18
    type <rec> (48)
        on left: 27 28 29 30 31
        on right: 4 9 19 20
    expr <rec> (49)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
        on right: 20 21 23 24 25 26 32 33 34 35 36 37 38 39 40 41 42 50 51
    func_call <rec> (50)
        on left: 47
        on right: 22 46
    arg_list_opt <rec> (51)
        on left: 48 49
        on right: 47
    arg_list <rec> (52)
        on left: 50 51
        on right: 49 51


State 0

    0 $accept: • program $end

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5

    program    go to state 6
    decl_list  go to state 7
    func_decl  go to state 8
    type       go to state 9


State 1

   29 type: UNIT •

    $default  reduce using rule 29 (type)


State 2

   28 type: FLOAT •

    $default  reduce using rule 28 (type)


State 3

   27 type: INT •

    $default  reduce using rule 27 (type)


State 4

   30 type: RATIONAL •

    $default  reduce using rule 30 (type)


State 5

   31 type: MATRIX •

    $default  reduce using rule 31 (type)


State 6

    0 $accept: program • $end

    $end  shift, and go to state 10


State 7

    1 program: decl_list •
    3 decl_list: decl_list • func_decl

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5

    $default  reduce using rule 1 (program)

    func_decl  go to state 11
    type       go to state 9


State 8

    2 decl_list: func_decl •

    $default  reduce using rule 2 (decl_list)


State 9

    4 func_decl: type • ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    ID  shift, and go to state 12


State 10

    0 $accept: program $end •

    $default  accept


State 11

    3 decl_list: decl_list func_decl •

    $default  reduce using rule 3 (decl_list)


State 12

    4 func_decl: type ID • LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 13


State 13

    4 func_decl: type ID LPAREN • param_list_opt RPAREN LBRACE stmt_list RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5

    $default  reduce using rule 5 (param_list_opt)

    param_list_opt  go to state 14
    param_list      go to state 15
    param           go to state 16
    type            go to state 17


State 14

    4 func_decl: type ID LPAREN param_list_opt • RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 18


State 15

    6 param_list_opt: param_list •
    8 param_list: param_list • COMMA param

    COMMA  shift, and go to state 19

    $default  reduce using rule 6 (param_list_opt)


State 16

    7 param_list: param •

    $default  reduce using rule 7 (param_list)


State 17

    9 param: type • ID

    ID  shift, and go to state 20


State 18

    4 func_decl: type ID LPAREN param_list_opt RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 21


State 19

    8 param_list: param_list COMMA • param

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5

    param  go to state 22
    type   go to state 17


State 20

    9 param: type ID •

    $default  reduce using rule 9 (param)


State 21

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 23


State 22

    8 param_list: param_list COMMA param •

    $default  reduce using rule 8 (param_list)


State 23

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list • RBRACE
   11 stmt_list: stmt_list • stmt

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    PRINT     shift, and go to state 24
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    RBRACE    shift, and go to state 28
    ID        shift, and go to state 29

    stmt             go to state 30
    var_decl_stmt    go to state 31
    assignment_stmt  go to state 32
    func_call_stmt   go to state 33
    print_stmt       go to state 34
    return_stmt      go to state 35
    if_stmt          go to state 36
    while_stmt       go to state 37
    type             go to state 38
    func_call        go to state 39


State 24

   23 print_stmt: PRINT • expr SEMICOLON

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 44
    func_call  go to state 45


State 25

   24 return_stmt: RETURN • expr SEMICOLON

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 46
    func_call  go to state 45


State 26

   25 if_stmt: IF • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 47


State 27

   26 while_stmt: WHILE • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 48


State 28

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 4 (func_decl)


State 29

   21 assignment_stmt: ID • ARROW_LEFT expr SEMICOLON
   47 func_call: ID • LPAREN arg_list_opt RPAREN

    ARROW_LEFT  shift, and go to state 49
    LPAREN      shift, and go to state 50


State 30

   11 stmt_list: stmt_list stmt •

    $default  reduce using rule 11 (stmt_list)


State 31

   12 stmt: var_decl_stmt •

    $default  reduce using rule 12 (stmt)


State 32

   13 stmt: assignment_stmt •

    $default  reduce using rule 13 (stmt)


State 33

   16 stmt: func_call_stmt •

    $default  reduce using rule 16 (stmt)


State 34

   14 stmt: print_stmt •

    $default  reduce using rule 14 (stmt)


State 35

   15 stmt: return_stmt •

    $default  reduce using rule 15 (stmt)


State 36

   17 stmt: if_stmt •

    $default  reduce using rule 17 (stmt)


State 37

   18 stmt: while_stmt •

    $default  reduce using rule 18 (stmt)


State 38

   19 var_decl_stmt: type • ID SEMICOLON
   20              | type • ID ARROW_LEFT expr SEMICOLON

    ID  shift, and go to state 51


State 39

   22 func_call_stmt: func_call • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 40

   42 expr: LPAREN • expr RPAREN

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 53
    func_call  go to state 45


State 41

   43 expr: ID •
   47 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 50

    $default  reduce using rule 43 (expr)


State 42

   44 expr: INT_LIT •

    $default  reduce using rule 44 (expr)


State 43

   45 expr: FLOAT_LIT •

    $default  reduce using rule 45 (expr)


State 44

   23 print_stmt: PRINT expr • SEMICOLON
   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    PLUS       shift, and go to state 54
    MINUS      shift, and go to state 55
    MUL        shift, and go to state 56
    DIV        shift, and go to state 57
    LT         shift, and go to state 58
    LE         shift, and go to state 59
    GT         shift, and go to state 60
    GE         shift, and go to state 61
    EQ         shift, and go to state 62
    NE         shift, and go to state 63
    SEMICOLON  shift, and go to state 64


State 45

   46 expr: func_call •

    $default  reduce using rule 46 (expr)


State 46

   24 return_stmt: RETURN expr • SEMICOLON
   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    PLUS       shift, and go to state 54
    MINUS      shift, and go to state 55
    MUL        shift, and go to state 56
    DIV        shift, and go to state 57
    LT         shift, and go to state 58
    LE         shift, and go to state 59
    GT         shift, and go to state 60
    GE         shift, and go to state 61
    EQ         shift, and go to state 62
    NE         shift, and go to state 63
    SEMICOLON  shift, and go to state 65


State 47

   25 if_stmt: IF LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 66
    func_call  go to state 45


State 48

   26 while_stmt: WHILE LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 67
    func_call  go to state 45


State 49

   21 assignment_stmt: ID ARROW_LEFT • expr SEMICOLON

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 68
    func_call  go to state 45


State 50

   47 func_call: ID LPAREN • arg_list_opt RPAREN

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    $default  reduce using rule 48 (arg_list_opt)

    expr          go to state 69
    func_call     go to state 45
    arg_list_opt  go to state 70
    arg_list      go to state 71


State 51

   19 var_decl_stmt: type ID • SEMICOLON
   20              | type ID • ARROW_LEFT expr SEMICOLON

    ARROW_LEFT  shift, and go to state 72
    SEMICOLON   shift, and go to state 73


State 52

   22 func_call_stmt: func_call SEMICOLON •

    $default  reduce using rule 22 (func_call_stmt)


State 53

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr
   42     | LPAREN expr • RPAREN

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    MUL     shift, and go to state 56
    DIV     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    EQ      shift, and go to state 62
    NE      shift, and go to state 63
    RPAREN  shift, and go to state 74


State 54

   32 expr: expr PLUS • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 75
    func_call  go to state 45


State 55

   33 expr: expr MINUS • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 76
    func_call  go to state 45


State 56

   34 expr: expr MUL • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 77
    func_call  go to state 45


State 57

   35 expr: expr DIV • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 78
    func_call  go to state 45


State 58

   36 expr: expr LT • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 79
    func_call  go to state 45


State 59

   37 expr: expr LE • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 80
    func_call  go to state 45


State 60

   38 expr: expr GT • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 81
    func_call  go to state 45


State 61

   39 expr: expr GE • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 82
    func_call  go to state 45


State 62

   40 expr: expr EQ • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 83
    func_call  go to state 45


State 63

   41 expr: expr NE • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 84
    func_call  go to state 45


State 64

   23 print_stmt: PRINT expr SEMICOLON •

    $default  reduce using rule 23 (print_stmt)


State 65

   24 return_stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 24 (return_stmt)


State 66

   25 if_stmt: IF LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    MUL     shift, and go to state 56
    DIV     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    EQ      shift, and go to state 62
    NE      shift, and go to state 63
    RPAREN  shift, and go to state 85


State 67

   26 while_stmt: WHILE LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    PLUS    shift, and go to state 54
    MINUS   shift, and go to state 55
    MUL     shift, and go to state 56
    DIV     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    EQ      shift, and go to state 62
    NE      shift, and go to state 63
    RPAREN  shift, and go to state 86


State 68

   21 assignment_stmt: ID ARROW_LEFT expr • SEMICOLON
   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    PLUS       shift, and go to state 54
    MINUS      shift, and go to state 55
    MUL        shift, and go to state 56
    DIV        shift, and go to state 57
    LT         shift, and go to state 58
    LE         shift, and go to state 59
    GT         shift, and go to state 60
    GE         shift, and go to state 61
    EQ         shift, and go to state 62
    NE         shift, and go to state 63
    SEMICOLON  shift, and go to state 87


State 69

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr
   50 arg_list: expr •

    PLUS   shift, and go to state 54
    MINUS  shift, and go to state 55
    MUL    shift, and go to state 56
    DIV    shift, and go to state 57
    LT     shift, and go to state 58
    LE     shift, and go to state 59
    GT     shift, and go to state 60
    GE     shift, and go to state 61
    EQ     shift, and go to state 62
    NE     shift, and go to state 63

    $default  reduce using rule 50 (arg_list)


State 70

   47 func_call: ID LPAREN arg_list_opt • RPAREN

    RPAREN  shift, and go to state 88


State 71

   49 arg_list_opt: arg_list •
   51 arg_list: arg_list • COMMA expr

    COMMA  shift, and go to state 89

    $default  reduce using rule 49 (arg_list_opt)


State 72

   20 var_decl_stmt: type ID ARROW_LEFT • expr SEMICOLON

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 90
    func_call  go to state 45


State 73

   19 var_decl_stmt: type ID SEMICOLON •

    $default  reduce using rule 19 (var_decl_stmt)


State 74

   42 expr: LPAREN expr RPAREN •

    $default  reduce using rule 42 (expr)


State 75

   32 expr: expr • PLUS expr
   32     | expr PLUS expr •
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    MUL  shift, and go to state 56
    DIV  shift, and go to state 57
    LT   shift, and go to state 58
    LE   shift, and go to state 59
    GT   shift, and go to state 60
    GE   shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63

    $default  reduce using rule 32 (expr)


State 76

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   33     | expr MINUS expr •
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    MUL  shift, and go to state 56
    DIV  shift, and go to state 57
    LT   shift, and go to state 58
    LE   shift, and go to state 59
    GT   shift, and go to state 60
    GE   shift, and go to state 61
    EQ   shift, and go to state 62
    NE   shift, and go to state 63

    $default  reduce using rule 33 (expr)


State 77

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   34     | expr MUL expr •
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    LT  shift, and go to state 58
    LE  shift, and go to state 59
    GT  shift, and go to state 60
    GE  shift, and go to state 61
    EQ  shift, and go to state 62
    NE  shift, and go to state 63

    $default  reduce using rule 34 (expr)


State 78

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   35     | expr DIV expr •
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    LT  shift, and go to state 58
    LE  shift, and go to state 59
    GT  shift, and go to state 60
    GE  shift, and go to state 61
    EQ  shift, and go to state 62
    NE  shift, and go to state 63

    $default  reduce using rule 35 (expr)


State 79

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   36     | expr LT expr •
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    $default  reduce using rule 36 (expr)


State 80

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   37     | expr LE expr •
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    $default  reduce using rule 37 (expr)


State 81

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   38     | expr GT expr •
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    $default  reduce using rule 38 (expr)


State 82

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   39     | expr GE expr •
   40     | expr • EQ expr
   41     | expr • NE expr

    $default  reduce using rule 39 (expr)


State 83

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   40     | expr EQ expr •
   41     | expr • NE expr

    $default  reduce using rule 40 (expr)


State 84

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr
   41     | expr NE expr •

    $default  reduce using rule 41 (expr)


State 85

   25 if_stmt: IF LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 91


State 86

   26 while_stmt: WHILE LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 92


State 87

   21 assignment_stmt: ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 21 (assignment_stmt)


State 88

   47 func_call: ID LPAREN arg_list_opt RPAREN •

    $default  reduce using rule 47 (func_call)


State 89

   51 arg_list: arg_list COMMA • expr

    LPAREN     shift, and go to state 40
    ID         shift, and go to state 41
    INT_LIT    shift, and go to state 42
    FLOAT_LIT  shift, and go to state 43

    expr       go to state 93
    func_call  go to state 45


State 90

   20 var_decl_stmt: type ID ARROW_LEFT expr • SEMICOLON
   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr

    PLUS       shift, and go to state 54
    MINUS      shift, and go to state 55
    MUL        shift, and go to state 56
    DIV        shift, and go to state 57
    LT         shift, and go to state 58
    LE         shift, and go to state 59
    GT         shift, and go to state 60
    GE         shift, and go to state 61
    EQ         shift, and go to state 62
    NE         shift, and go to state 63
    SEMICOLON  shift, and go to state 94


State 91

   25 if_stmt: IF LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 95


State 92

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 96


State 93

   32 expr: expr • PLUS expr
   33     | expr • MINUS expr
   34     | expr • MUL expr
   35     | expr • DIV expr
   36     | expr • LT expr
   37     | expr • LE expr
   38     | expr • GT expr
   39     | expr • GE expr
   40     | expr • EQ expr
   41     | expr • NE expr
   51 arg_list: arg_list COMMA expr •

    PLUS   shift, and go to state 54
    MINUS  shift, and go to state 55
    MUL    shift, and go to state 56
    DIV    shift, and go to state 57
    LT     shift, and go to state 58
    LE     shift, and go to state 59
    GT     shift, and go to state 60
    GE     shift, and go to state 61
    EQ     shift, and go to state 62
    NE     shift, and go to state 63

    $default  reduce using rule 51 (arg_list)


State 94

   20 var_decl_stmt: type ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 20 (var_decl_stmt)


State 95

   11 stmt_list: stmt_list • stmt
   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    PRINT     shift, and go to state 24
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    RBRACE    shift, and go to state 97
    ID        shift, and go to state 29

    stmt             go to state 30
    var_decl_stmt    go to state 31
    assignment_stmt  go to state 32
    func_call_stmt   go to state 33
    print_stmt       go to state 34
    return_stmt      go to state 35
    if_stmt          go to state 36
    while_stmt       go to state 37
    type             go to state 38
    func_call        go to state 39


State 96

   11 stmt_list: stmt_list • stmt
   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    MATRIX    shift, and go to state 5
    PRINT     shift, and go to state 24
    RETURN    shift, and go to state 25
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    RBRACE    shift, and go to state 98
    ID        shift, and go to state 29

    stmt             go to state 30
    var_decl_stmt    go to state 31
    assignment_stmt  go to state 32
    func_call_stmt   go to state 33
    print_stmt       go to state 34
    return_stmt      go to state 35
    if_stmt          go to state 36
    while_stmt       go to state 37
    type             go to state 38
    func_call        go to state 39


State 97

   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 25 (if_stmt)


State 98

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 26 (while_stmt)
