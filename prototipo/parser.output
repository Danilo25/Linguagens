Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: func_decl
    3          | decl_list func_decl

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    5 param_list_opt: ε
    6               | param_list

    7 param_list: param
    8           | param_list COMMA param

    9 param: type ID

   10 stmt_list: ε
   11          | stmt_list stmt

   12 stmt: var_decl_stmt
   13     | assignment_stmt
   14     | print_stmt
   15     | return_stmt
   16     | func_call_stmt
   17     | if_stmt
   18     | while_stmt

   19 var_decl_stmt: type ID SEMICOLON
   20              | type ID ARROW_LEFT expr SEMICOLON

   21 assignment_stmt: ID ARROW_LEFT expr SEMICOLON

   22 func_call_stmt: func_call SEMICOLON

   23 print_stmt: PRINT expr SEMICOLON

   24 return_stmt: RETURN expr SEMICOLON

   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE

   27 type: INT
   28     | FLOAT
   29     | UNIT

   30 expr: expr PLUS expr
   31     | expr MINUS expr
   32     | expr MUL expr
   33     | expr DIV expr
   34     | expr LT expr
   35     | expr LE expr
   36     | expr GT expr
   37     | expr GE expr
   38     | expr EQ expr
   39     | expr NE expr
   40     | LPAREN expr RPAREN
   41     | ID
   42     | INT_LIT
   43     | FLOAT_LIT
   44     | func_call

   45 func_call: ID LPAREN arg_list_opt RPAREN

   46 arg_list_opt: ε
   47             | arg_list

   48 arg_list: expr
   49         | arg_list COMMA expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    UNIT (258) 29
    FLOAT (259) 28
    INT (260) 27
    PRINT (261) 23
    RETURN (262) 24
    IF (263) 25
    WHILE (264) 26
    ARROW_LEFT (265) 20 21
    PLUS (266) 30
    MINUS (267) 31
    MUL (268) 32
    DIV (269) 33
    LT (270) 34
    LE (271) 35
    GT (272) 36
    GE (273) 37
    EQ (274) 38
    NE (275) 39
    SEMICOLON (276) 19 20 21 22 23 24
    LPAREN (277) 4 25 26 40 45
    RPAREN (278) 4 25 26 40 45
    LBRACE (279) 4 25 26
    RBRACE (280) 4 25 26
    COMMA (281) 8 49
    ID <str_val> (282) 4 9 19 20 21 41 45
    INT_LIT <int_val> (283) 42
    FLOAT_LIT <float_val> (284) 43


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program <rec> (31)
        on left: 1
        on right: 0
    decl_list <rec> (32)
        on left: 2 3
        on right: 1 3
    func_decl <rec> (33)
        on left: 4
        on right: 2 3
    param_list_opt <rec> (34)
        on left: 5 6
        on right: 4
    param_list <rec> (35)
        on left: 7 8
        on right: 6 8
    param <rec> (36)
        on left: 9
        on right: 7 8
    stmt_list <rec> (37)
        on left: 10 11
        on right: 4 11 25 26
    stmt <rec> (38)
        on left: 12 13 14 15 16 17 18
        on right: 11
    var_decl_stmt <rec> (39)
        on left: 19 20
        on right: 12
    assignment_stmt <rec> (40)
        on left: 21
        on right: 13
    func_call_stmt <rec> (41)
        on left: 22
        on right: 16
    print_stmt <rec> (42)
        on left: 23
        on right: 14
    return_stmt <rec> (43)
        on left: 24
        on right: 15
    if_stmt <rec> (44)
        on left: 25
        on right: 17
    while_stmt <rec> (45)
        on left: 26
        on right: 18
    type <rec> (46)
        on left: 27 28 29
        on right: 4 9 19 20
    expr <rec> (47)
        on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 20 21 23 24 25 26 30 31 32 33 34 35 36 37 38 39 40 48 49
    func_call <rec> (48)
        on left: 45
        on right: 22 44
    arg_list_opt <rec> (49)
        on left: 46 47
        on right: 45
    arg_list <rec> (50)
        on left: 48 49
        on right: 47 49


State 0

    0 $accept: • program $end

    UNIT   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    program    go to state 4
    decl_list  go to state 5
    func_decl  go to state 6
    type       go to state 7


State 1

   29 type: UNIT •

    $default  reduce using rule 29 (type)


State 2

   28 type: FLOAT •

    $default  reduce using rule 28 (type)


State 3

   27 type: INT •

    $default  reduce using rule 27 (type)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 8


State 5

    1 program: decl_list •
    3 decl_list: decl_list • func_decl

    UNIT   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 1 (program)

    func_decl  go to state 9
    type       go to state 7


State 6

    2 decl_list: func_decl •

    $default  reduce using rule 2 (decl_list)


State 7

    4 func_decl: type • ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    ID  shift, and go to state 10


State 8

    0 $accept: program $end •

    $default  accept


State 9

    3 decl_list: decl_list func_decl •

    $default  reduce using rule 3 (decl_list)


State 10

    4 func_decl: type ID • LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 11


State 11

    4 func_decl: type ID LPAREN • param_list_opt RPAREN LBRACE stmt_list RBRACE

    UNIT   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 5 (param_list_opt)

    param_list_opt  go to state 12
    param_list      go to state 13
    param           go to state 14
    type            go to state 15


State 12

    4 func_decl: type ID LPAREN param_list_opt • RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 16


State 13

    6 param_list_opt: param_list •
    8 param_list: param_list • COMMA param

    COMMA  shift, and go to state 17

    $default  reduce using rule 6 (param_list_opt)


State 14

    7 param_list: param •

    $default  reduce using rule 7 (param_list)


State 15

    9 param: type • ID

    ID  shift, and go to state 18


State 16

    4 func_decl: type ID LPAREN param_list_opt RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 19


State 17

    8 param_list: param_list COMMA • param

    UNIT   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    param  go to state 20
    type   go to state 15


State 18

    9 param: type ID •

    $default  reduce using rule 9 (param)


State 19

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 21


State 20

    8 param_list: param_list COMMA param •

    $default  reduce using rule 8 (param_list)


State 21

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list • RBRACE
   11 stmt_list: stmt_list • stmt

    UNIT    shift, and go to state 1
    FLOAT   shift, and go to state 2
    INT     shift, and go to state 3
    PRINT   shift, and go to state 22
    RETURN  shift, and go to state 23
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    RBRACE  shift, and go to state 26
    ID      shift, and go to state 27

    stmt             go to state 28
    var_decl_stmt    go to state 29
    assignment_stmt  go to state 30
    func_call_stmt   go to state 31
    print_stmt       go to state 32
    return_stmt      go to state 33
    if_stmt          go to state 34
    while_stmt       go to state 35
    type             go to state 36
    func_call        go to state 37


State 22

   23 print_stmt: PRINT • expr SEMICOLON

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 42
    func_call  go to state 43


State 23

   24 return_stmt: RETURN • expr SEMICOLON

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 44
    func_call  go to state 43


State 24

   25 if_stmt: IF • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 45


State 25

   26 while_stmt: WHILE • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 46


State 26

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 4 (func_decl)


State 27

   21 assignment_stmt: ID • ARROW_LEFT expr SEMICOLON
   45 func_call: ID • LPAREN arg_list_opt RPAREN

    ARROW_LEFT  shift, and go to state 47
    LPAREN      shift, and go to state 48


State 28

   11 stmt_list: stmt_list stmt •

    $default  reduce using rule 11 (stmt_list)


State 29

   12 stmt: var_decl_stmt •

    $default  reduce using rule 12 (stmt)


State 30

   13 stmt: assignment_stmt •

    $default  reduce using rule 13 (stmt)


State 31

   16 stmt: func_call_stmt •

    $default  reduce using rule 16 (stmt)


State 32

   14 stmt: print_stmt •

    $default  reduce using rule 14 (stmt)


State 33

   15 stmt: return_stmt •

    $default  reduce using rule 15 (stmt)


State 34

   17 stmt: if_stmt •

    $default  reduce using rule 17 (stmt)


State 35

   18 stmt: while_stmt •

    $default  reduce using rule 18 (stmt)


State 36

   19 var_decl_stmt: type • ID SEMICOLON
   20              | type • ID ARROW_LEFT expr SEMICOLON

    ID  shift, and go to state 49


State 37

   22 func_call_stmt: func_call • SEMICOLON

    SEMICOLON  shift, and go to state 50


State 38

   40 expr: LPAREN • expr RPAREN

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 51
    func_call  go to state 43


State 39

   41 expr: ID •
   45 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 48

    $default  reduce using rule 41 (expr)


State 40

   42 expr: INT_LIT •

    $default  reduce using rule 42 (expr)


State 41

   43 expr: FLOAT_LIT •

    $default  reduce using rule 43 (expr)


State 42

   23 print_stmt: PRINT expr • SEMICOLON
   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    PLUS       shift, and go to state 52
    MINUS      shift, and go to state 53
    MUL        shift, and go to state 54
    DIV        shift, and go to state 55
    LT         shift, and go to state 56
    LE         shift, and go to state 57
    GT         shift, and go to state 58
    GE         shift, and go to state 59
    EQ         shift, and go to state 60
    NE         shift, and go to state 61
    SEMICOLON  shift, and go to state 62


State 43

   44 expr: func_call •

    $default  reduce using rule 44 (expr)


State 44

   24 return_stmt: RETURN expr • SEMICOLON
   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    PLUS       shift, and go to state 52
    MINUS      shift, and go to state 53
    MUL        shift, and go to state 54
    DIV        shift, and go to state 55
    LT         shift, and go to state 56
    LE         shift, and go to state 57
    GT         shift, and go to state 58
    GE         shift, and go to state 59
    EQ         shift, and go to state 60
    NE         shift, and go to state 61
    SEMICOLON  shift, and go to state 63


State 45

   25 if_stmt: IF LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 64
    func_call  go to state 43


State 46

   26 while_stmt: WHILE LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 65
    func_call  go to state 43


State 47

   21 assignment_stmt: ID ARROW_LEFT • expr SEMICOLON

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 66
    func_call  go to state 43


State 48

   45 func_call: ID LPAREN • arg_list_opt RPAREN

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    $default  reduce using rule 46 (arg_list_opt)

    expr          go to state 67
    func_call     go to state 43
    arg_list_opt  go to state 68
    arg_list      go to state 69


State 49

   19 var_decl_stmt: type ID • SEMICOLON
   20              | type ID • ARROW_LEFT expr SEMICOLON

    ARROW_LEFT  shift, and go to state 70
    SEMICOLON   shift, and go to state 71


State 50

   22 func_call_stmt: func_call SEMICOLON •

    $default  reduce using rule 22 (func_call_stmt)


State 51

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr
   40     | LPAREN expr • RPAREN

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    MUL     shift, and go to state 54
    DIV     shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61
    RPAREN  shift, and go to state 72


State 52

   30 expr: expr PLUS • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 73
    func_call  go to state 43


State 53

   31 expr: expr MINUS • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 74
    func_call  go to state 43


State 54

   32 expr: expr MUL • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 75
    func_call  go to state 43


State 55

   33 expr: expr DIV • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 76
    func_call  go to state 43


State 56

   34 expr: expr LT • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 77
    func_call  go to state 43


State 57

   35 expr: expr LE • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 78
    func_call  go to state 43


State 58

   36 expr: expr GT • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 79
    func_call  go to state 43


State 59

   37 expr: expr GE • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 80
    func_call  go to state 43


State 60

   38 expr: expr EQ • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 81
    func_call  go to state 43


State 61

   39 expr: expr NE • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 82
    func_call  go to state 43


State 62

   23 print_stmt: PRINT expr SEMICOLON •

    $default  reduce using rule 23 (print_stmt)


State 63

   24 return_stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 24 (return_stmt)


State 64

   25 if_stmt: IF LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    MUL     shift, and go to state 54
    DIV     shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61
    RPAREN  shift, and go to state 83


State 65

   26 while_stmt: WHILE LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    MUL     shift, and go to state 54
    DIV     shift, and go to state 55
    LT      shift, and go to state 56
    LE      shift, and go to state 57
    GT      shift, and go to state 58
    GE      shift, and go to state 59
    EQ      shift, and go to state 60
    NE      shift, and go to state 61
    RPAREN  shift, and go to state 84


State 66

   21 assignment_stmt: ID ARROW_LEFT expr • SEMICOLON
   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    PLUS       shift, and go to state 52
    MINUS      shift, and go to state 53
    MUL        shift, and go to state 54
    DIV        shift, and go to state 55
    LT         shift, and go to state 56
    LE         shift, and go to state 57
    GT         shift, and go to state 58
    GE         shift, and go to state 59
    EQ         shift, and go to state 60
    NE         shift, and go to state 61
    SEMICOLON  shift, and go to state 85


State 67

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr
   48 arg_list: expr •

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MUL    shift, and go to state 54
    DIV    shift, and go to state 55
    LT     shift, and go to state 56
    LE     shift, and go to state 57
    GT     shift, and go to state 58
    GE     shift, and go to state 59
    EQ     shift, and go to state 60
    NE     shift, and go to state 61

    $default  reduce using rule 48 (arg_list)


State 68

   45 func_call: ID LPAREN arg_list_opt • RPAREN

    RPAREN  shift, and go to state 86


State 69

   47 arg_list_opt: arg_list •
   49 arg_list: arg_list • COMMA expr

    COMMA  shift, and go to state 87

    $default  reduce using rule 47 (arg_list_opt)


State 70

   20 var_decl_stmt: type ID ARROW_LEFT • expr SEMICOLON

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 88
    func_call  go to state 43


State 71

   19 var_decl_stmt: type ID SEMICOLON •

    $default  reduce using rule 19 (var_decl_stmt)


State 72

   40 expr: LPAREN expr RPAREN •

    $default  reduce using rule 40 (expr)


State 73

   30 expr: expr • PLUS expr
   30     | expr PLUS expr •
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55
    LT   shift, and go to state 56
    LE   shift, and go to state 57
    GT   shift, and go to state 58
    GE   shift, and go to state 59
    EQ   shift, and go to state 60
    NE   shift, and go to state 61

    $default  reduce using rule 30 (expr)


State 74

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   31     | expr MINUS expr •
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    MUL  shift, and go to state 54
    DIV  shift, and go to state 55
    LT   shift, and go to state 56
    LE   shift, and go to state 57
    GT   shift, and go to state 58
    GE   shift, and go to state 59
    EQ   shift, and go to state 60
    NE   shift, and go to state 61

    $default  reduce using rule 31 (expr)


State 75

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   32     | expr MUL expr •
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    LT  shift, and go to state 56
    LE  shift, and go to state 57
    GT  shift, and go to state 58
    GE  shift, and go to state 59
    EQ  shift, and go to state 60
    NE  shift, and go to state 61

    $default  reduce using rule 32 (expr)


State 76

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   33     | expr DIV expr •
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    LT  shift, and go to state 56
    LE  shift, and go to state 57
    GT  shift, and go to state 58
    GE  shift, and go to state 59
    EQ  shift, and go to state 60
    NE  shift, and go to state 61

    $default  reduce using rule 33 (expr)


State 77

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   34     | expr LT expr •
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    $default  reduce using rule 34 (expr)


State 78

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   35     | expr LE expr •
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    $default  reduce using rule 35 (expr)


State 79

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   36     | expr GT expr •
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    $default  reduce using rule 36 (expr)


State 80

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   37     | expr GE expr •
   38     | expr • EQ expr
   39     | expr • NE expr

    $default  reduce using rule 37 (expr)


State 81

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   38     | expr EQ expr •
   39     | expr • NE expr

    $default  reduce using rule 38 (expr)


State 82

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr
   39     | expr NE expr •

    $default  reduce using rule 39 (expr)


State 83

   25 if_stmt: IF LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 89


State 84

   26 while_stmt: WHILE LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 90


State 85

   21 assignment_stmt: ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 21 (assignment_stmt)


State 86

   45 func_call: ID LPAREN arg_list_opt RPAREN •

    $default  reduce using rule 45 (func_call)


State 87

   49 arg_list: arg_list COMMA • expr

    LPAREN     shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41

    expr       go to state 91
    func_call  go to state 43


State 88

   20 var_decl_stmt: type ID ARROW_LEFT expr • SEMICOLON
   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr

    PLUS       shift, and go to state 52
    MINUS      shift, and go to state 53
    MUL        shift, and go to state 54
    DIV        shift, and go to state 55
    LT         shift, and go to state 56
    LE         shift, and go to state 57
    GT         shift, and go to state 58
    GE         shift, and go to state 59
    EQ         shift, and go to state 60
    NE         shift, and go to state 61
    SEMICOLON  shift, and go to state 92


State 89

   25 if_stmt: IF LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 93


State 90

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 94


State 91

   30 expr: expr • PLUS expr
   31     | expr • MINUS expr
   32     | expr • MUL expr
   33     | expr • DIV expr
   34     | expr • LT expr
   35     | expr • LE expr
   36     | expr • GT expr
   37     | expr • GE expr
   38     | expr • EQ expr
   39     | expr • NE expr
   49 arg_list: arg_list COMMA expr •

    PLUS   shift, and go to state 52
    MINUS  shift, and go to state 53
    MUL    shift, and go to state 54
    DIV    shift, and go to state 55
    LT     shift, and go to state 56
    LE     shift, and go to state 57
    GT     shift, and go to state 58
    GE     shift, and go to state 59
    EQ     shift, and go to state 60
    NE     shift, and go to state 61

    $default  reduce using rule 49 (arg_list)


State 92

   20 var_decl_stmt: type ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 20 (var_decl_stmt)


State 93

   11 stmt_list: stmt_list • stmt
   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT    shift, and go to state 1
    FLOAT   shift, and go to state 2
    INT     shift, and go to state 3
    PRINT   shift, and go to state 22
    RETURN  shift, and go to state 23
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    RBRACE  shift, and go to state 95
    ID      shift, and go to state 27

    stmt             go to state 28
    var_decl_stmt    go to state 29
    assignment_stmt  go to state 30
    func_call_stmt   go to state 31
    print_stmt       go to state 32
    return_stmt      go to state 33
    if_stmt          go to state 34
    while_stmt       go to state 35
    type             go to state 36
    func_call        go to state 37


State 94

   11 stmt_list: stmt_list • stmt
   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT    shift, and go to state 1
    FLOAT   shift, and go to state 2
    INT     shift, and go to state 3
    PRINT   shift, and go to state 22
    RETURN  shift, and go to state 23
    IF      shift, and go to state 24
    WHILE   shift, and go to state 25
    RBRACE  shift, and go to state 96
    ID      shift, and go to state 27

    stmt             go to state 28
    var_decl_stmt    go to state 29
    assignment_stmt  go to state 30
    func_call_stmt   go to state 31
    print_stmt       go to state 32
    return_stmt      go to state 33
    if_stmt          go to state 34
    while_stmt       go to state 35
    type             go to state 36
    func_call        go to state 37


State 95

   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 25 (if_stmt)


State 96

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 26 (while_stmt)
