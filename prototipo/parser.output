Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: func_decl
    3          | decl_list func_decl

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    5 param_list_opt: ε
    6               | param_list

    7 param_list: param
    8           | param_list COMMA param

    9 param: type ID

   10 stmt_list: ε
   11          | stmt_list stmt

   12 stmt: var_decl_stmt
   13     | assignment_stmt
   14     | print_stmt
   15     | return_stmt
   16     | func_call_stmt
   17     | if_stmt
   18     | while_stmt

   19 var_decl_stmt: type ID SEMICOLON
   20              | type ID ARROW_LEFT expr SEMICOLON

   21 assignment_stmt: ID ARROW_LEFT expr SEMICOLON

   22 func_call_stmt: func_call SEMICOLON

   23 print_stmt: PRINT expr SEMICOLON

   24 return_stmt: RETURN expr SEMICOLON

   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE

   27 type: INT
   28     | FLOAT
   29     | UNIT
   30     | RATIONAL

   31 expr: expr PLUS expr
   32     | expr MINUS expr
   33     | expr MUL expr
   34     | expr DIV expr
   35     | expr LT expr
   36     | expr LE expr
   37     | expr GT expr
   38     | expr GE expr
   39     | expr EQ expr
   40     | expr NE expr
   41     | LPAREN expr RPAREN
   42     | ID
   43     | INT_LIT
   44     | FLOAT_LIT
   45     | func_call

   46 func_call: ID LPAREN arg_list_opt RPAREN

   47 arg_list_opt: ε
   48             | arg_list

   49 arg_list: expr
   50         | arg_list COMMA expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    UNIT (258) 29
    FLOAT (259) 28
    INT (260) 27
    RATIONAL (261) 30
    PRINT (262) 23
    RETURN (263) 24
    IF (264) 25
    WHILE (265) 26
    ARROW_LEFT (266) 20 21
    PLUS (267) 31
    MINUS (268) 32
    MUL (269) 33
    DIV (270) 34
    LT (271) 35
    LE (272) 36
    GT (273) 37
    GE (274) 38
    EQ (275) 39
    NE (276) 40
    SEMICOLON (277) 19 20 21 22 23 24
    LPAREN (278) 4 25 26 41 46
    RPAREN (279) 4 25 26 41 46
    LBRACE (280) 4 25 26
    RBRACE (281) 4 25 26
    COMMA (282) 8 50
    ID <str_val> (283) 4 9 19 20 21 42 46
    INT_LIT <int_val> (284) 43
    FLOAT_LIT <float_val> (285) 44


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program <rec> (32)
        on left: 1
        on right: 0
    decl_list <rec> (33)
        on left: 2 3
        on right: 1 3
    func_decl <rec> (34)
        on left: 4
        on right: 2 3
    param_list_opt <rec> (35)
        on left: 5 6
        on right: 4
    param_list <rec> (36)
        on left: 7 8
        on right: 6 8
    param <rec> (37)
        on left: 9
        on right: 7 8
    stmt_list <rec> (38)
        on left: 10 11
        on right: 4 11 25 26
    stmt <rec> (39)
        on left: 12 13 14 15 16 17 18
        on right: 11
    var_decl_stmt <rec> (40)
        on left: 19 20
        on right: 12
    assignment_stmt <rec> (41)
        on left: 21
        on right: 13
    func_call_stmt <rec> (42)
        on left: 22
        on right: 16
    print_stmt <rec> (43)
        on left: 23
        on right: 14
    return_stmt <rec> (44)
        on left: 24
        on right: 15
    if_stmt <rec> (45)
        on left: 25
        on right: 17
    while_stmt <rec> (46)
        on left: 26
        on right: 18
    type <rec> (47)
        on left: 27 28 29 30
        on right: 4 9 19 20
    expr <rec> (48)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
        on right: 20 21 23 24 25 26 31 32 33 34 35 36 37 38 39 40 41 49 50
    func_call <rec> (49)
        on left: 46
        on right: 22 45
    arg_list_opt <rec> (50)
        on left: 47 48
        on right: 46
    arg_list <rec> (51)
        on left: 49 50
        on right: 48 50


State 0

    0 $accept: • program $end

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4

    program    go to state 5
    decl_list  go to state 6
    func_decl  go to state 7
    type       go to state 8


State 1

   29 type: UNIT •

    $default  reduce using rule 29 (type)


State 2

   28 type: FLOAT •

    $default  reduce using rule 28 (type)


State 3

   27 type: INT •

    $default  reduce using rule 27 (type)


State 4

   30 type: RATIONAL •

    $default  reduce using rule 30 (type)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 9


State 6

    1 program: decl_list •
    3 decl_list: decl_list • func_decl

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4

    $default  reduce using rule 1 (program)

    func_decl  go to state 10
    type       go to state 8


State 7

    2 decl_list: func_decl •

    $default  reduce using rule 2 (decl_list)


State 8

    4 func_decl: type • ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    ID  shift, and go to state 11


State 9

    0 $accept: program $end •

    $default  accept


State 10

    3 decl_list: decl_list func_decl •

    $default  reduce using rule 3 (decl_list)


State 11

    4 func_decl: type ID • LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 12


State 12

    4 func_decl: type ID LPAREN • param_list_opt RPAREN LBRACE stmt_list RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4

    $default  reduce using rule 5 (param_list_opt)

    param_list_opt  go to state 13
    param_list      go to state 14
    param           go to state 15
    type            go to state 16


State 13

    4 func_decl: type ID LPAREN param_list_opt • RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 17


State 14

    6 param_list_opt: param_list •
    8 param_list: param_list • COMMA param

    COMMA  shift, and go to state 18

    $default  reduce using rule 6 (param_list_opt)


State 15

    7 param_list: param •

    $default  reduce using rule 7 (param_list)


State 16

    9 param: type • ID

    ID  shift, and go to state 19


State 17

    4 func_decl: type ID LPAREN param_list_opt RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 20


State 18

    8 param_list: param_list COMMA • param

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4

    param  go to state 21
    type   go to state 16


State 19

    9 param: type ID •

    $default  reduce using rule 9 (param)


State 20

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 22


State 21

    8 param_list: param_list COMMA param •

    $default  reduce using rule 8 (param_list)


State 22

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list • RBRACE
   11 stmt_list: stmt_list • stmt

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    PRINT     shift, and go to state 23
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    RBRACE    shift, and go to state 27
    ID        shift, and go to state 28

    stmt             go to state 29
    var_decl_stmt    go to state 30
    assignment_stmt  go to state 31
    func_call_stmt   go to state 32
    print_stmt       go to state 33
    return_stmt      go to state 34
    if_stmt          go to state 35
    while_stmt       go to state 36
    type             go to state 37
    func_call        go to state 38


State 23

   23 print_stmt: PRINT • expr SEMICOLON

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 43
    func_call  go to state 44


State 24

   24 return_stmt: RETURN • expr SEMICOLON

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 45
    func_call  go to state 44


State 25

   25 if_stmt: IF • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 46


State 26

   26 while_stmt: WHILE • LPAREN expr RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 47


State 27

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 4 (func_decl)


State 28

   21 assignment_stmt: ID • ARROW_LEFT expr SEMICOLON
   46 func_call: ID • LPAREN arg_list_opt RPAREN

    ARROW_LEFT  shift, and go to state 48
    LPAREN      shift, and go to state 49


State 29

   11 stmt_list: stmt_list stmt •

    $default  reduce using rule 11 (stmt_list)


State 30

   12 stmt: var_decl_stmt •

    $default  reduce using rule 12 (stmt)


State 31

   13 stmt: assignment_stmt •

    $default  reduce using rule 13 (stmt)


State 32

   16 stmt: func_call_stmt •

    $default  reduce using rule 16 (stmt)


State 33

   14 stmt: print_stmt •

    $default  reduce using rule 14 (stmt)


State 34

   15 stmt: return_stmt •

    $default  reduce using rule 15 (stmt)


State 35

   17 stmt: if_stmt •

    $default  reduce using rule 17 (stmt)


State 36

   18 stmt: while_stmt •

    $default  reduce using rule 18 (stmt)


State 37

   19 var_decl_stmt: type • ID SEMICOLON
   20              | type • ID ARROW_LEFT expr SEMICOLON

    ID  shift, and go to state 50


State 38

   22 func_call_stmt: func_call • SEMICOLON

    SEMICOLON  shift, and go to state 51


State 39

   41 expr: LPAREN • expr RPAREN

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 52
    func_call  go to state 44


State 40

   42 expr: ID •
   46 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 49

    $default  reduce using rule 42 (expr)


State 41

   43 expr: INT_LIT •

    $default  reduce using rule 43 (expr)


State 42

   44 expr: FLOAT_LIT •

    $default  reduce using rule 44 (expr)


State 43

   23 print_stmt: PRINT expr • SEMICOLON
   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    PLUS       shift, and go to state 53
    MINUS      shift, and go to state 54
    MUL        shift, and go to state 55
    DIV        shift, and go to state 56
    LT         shift, and go to state 57
    LE         shift, and go to state 58
    GT         shift, and go to state 59
    GE         shift, and go to state 60
    EQ         shift, and go to state 61
    NE         shift, and go to state 62
    SEMICOLON  shift, and go to state 63


State 44

   45 expr: func_call •

    $default  reduce using rule 45 (expr)


State 45

   24 return_stmt: RETURN expr • SEMICOLON
   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    PLUS       shift, and go to state 53
    MINUS      shift, and go to state 54
    MUL        shift, and go to state 55
    DIV        shift, and go to state 56
    LT         shift, and go to state 57
    LE         shift, and go to state 58
    GT         shift, and go to state 59
    GE         shift, and go to state 60
    EQ         shift, and go to state 61
    NE         shift, and go to state 62
    SEMICOLON  shift, and go to state 64


State 46

   25 if_stmt: IF LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 65
    func_call  go to state 44


State 47

   26 while_stmt: WHILE LPAREN • expr RPAREN LBRACE stmt_list RBRACE

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 66
    func_call  go to state 44


State 48

   21 assignment_stmt: ID ARROW_LEFT • expr SEMICOLON

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 67
    func_call  go to state 44


State 49

   46 func_call: ID LPAREN • arg_list_opt RPAREN

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    $default  reduce using rule 47 (arg_list_opt)

    expr          go to state 68
    func_call     go to state 44
    arg_list_opt  go to state 69
    arg_list      go to state 70


State 50

   19 var_decl_stmt: type ID • SEMICOLON
   20              | type ID • ARROW_LEFT expr SEMICOLON

    ARROW_LEFT  shift, and go to state 71
    SEMICOLON   shift, and go to state 72


State 51

   22 func_call_stmt: func_call SEMICOLON •

    $default  reduce using rule 22 (func_call_stmt)


State 52

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr
   41     | LPAREN expr • RPAREN

    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    MUL     shift, and go to state 55
    DIV     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    EQ      shift, and go to state 61
    NE      shift, and go to state 62
    RPAREN  shift, and go to state 73


State 53

   31 expr: expr PLUS • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 74
    func_call  go to state 44


State 54

   32 expr: expr MINUS • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 75
    func_call  go to state 44


State 55

   33 expr: expr MUL • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 76
    func_call  go to state 44


State 56

   34 expr: expr DIV • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 77
    func_call  go to state 44


State 57

   35 expr: expr LT • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 78
    func_call  go to state 44


State 58

   36 expr: expr LE • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 79
    func_call  go to state 44


State 59

   37 expr: expr GT • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 80
    func_call  go to state 44


State 60

   38 expr: expr GE • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 81
    func_call  go to state 44


State 61

   39 expr: expr EQ • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 82
    func_call  go to state 44


State 62

   40 expr: expr NE • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 83
    func_call  go to state 44


State 63

   23 print_stmt: PRINT expr SEMICOLON •

    $default  reduce using rule 23 (print_stmt)


State 64

   24 return_stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 24 (return_stmt)


State 65

   25 if_stmt: IF LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    MUL     shift, and go to state 55
    DIV     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    EQ      shift, and go to state 61
    NE      shift, and go to state 62
    RPAREN  shift, and go to state 84


State 66

   26 while_stmt: WHILE LPAREN expr • RPAREN LBRACE stmt_list RBRACE
   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    PLUS    shift, and go to state 53
    MINUS   shift, and go to state 54
    MUL     shift, and go to state 55
    DIV     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    EQ      shift, and go to state 61
    NE      shift, and go to state 62
    RPAREN  shift, and go to state 85


State 67

   21 assignment_stmt: ID ARROW_LEFT expr • SEMICOLON
   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    PLUS       shift, and go to state 53
    MINUS      shift, and go to state 54
    MUL        shift, and go to state 55
    DIV        shift, and go to state 56
    LT         shift, and go to state 57
    LE         shift, and go to state 58
    GT         shift, and go to state 59
    GE         shift, and go to state 60
    EQ         shift, and go to state 61
    NE         shift, and go to state 62
    SEMICOLON  shift, and go to state 86


State 68

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr
   49 arg_list: expr •

    PLUS   shift, and go to state 53
    MINUS  shift, and go to state 54
    MUL    shift, and go to state 55
    DIV    shift, and go to state 56
    LT     shift, and go to state 57
    LE     shift, and go to state 58
    GT     shift, and go to state 59
    GE     shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62

    $default  reduce using rule 49 (arg_list)


State 69

   46 func_call: ID LPAREN arg_list_opt • RPAREN

    RPAREN  shift, and go to state 87


State 70

   48 arg_list_opt: arg_list •
   50 arg_list: arg_list • COMMA expr

    COMMA  shift, and go to state 88

    $default  reduce using rule 48 (arg_list_opt)


State 71

   20 var_decl_stmt: type ID ARROW_LEFT • expr SEMICOLON

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 89
    func_call  go to state 44


State 72

   19 var_decl_stmt: type ID SEMICOLON •

    $default  reduce using rule 19 (var_decl_stmt)


State 73

   41 expr: LPAREN expr RPAREN •

    $default  reduce using rule 41 (expr)


State 74

   31 expr: expr • PLUS expr
   31     | expr PLUS expr •
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    LT   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    GE   shift, and go to state 60
    EQ   shift, and go to state 61
    NE   shift, and go to state 62

    $default  reduce using rule 31 (expr)


State 75

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   32     | expr MINUS expr •
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    LT   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    GE   shift, and go to state 60
    EQ   shift, and go to state 61
    NE   shift, and go to state 62

    $default  reduce using rule 32 (expr)


State 76

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   33     | expr MUL expr •
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    LT  shift, and go to state 57
    LE  shift, and go to state 58
    GT  shift, and go to state 59
    GE  shift, and go to state 60
    EQ  shift, and go to state 61
    NE  shift, and go to state 62

    $default  reduce using rule 33 (expr)


State 77

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   34     | expr DIV expr •
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    LT  shift, and go to state 57
    LE  shift, and go to state 58
    GT  shift, and go to state 59
    GE  shift, and go to state 60
    EQ  shift, and go to state 61
    NE  shift, and go to state 62

    $default  reduce using rule 34 (expr)


State 78

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   35     | expr LT expr •
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    $default  reduce using rule 35 (expr)


State 79

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   36     | expr LE expr •
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    $default  reduce using rule 36 (expr)


State 80

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   37     | expr GT expr •
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    $default  reduce using rule 37 (expr)


State 81

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   38     | expr GE expr •
   39     | expr • EQ expr
   40     | expr • NE expr

    $default  reduce using rule 38 (expr)


State 82

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   39     | expr EQ expr •
   40     | expr • NE expr

    $default  reduce using rule 39 (expr)


State 83

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr
   40     | expr NE expr •

    $default  reduce using rule 40 (expr)


State 84

   25 if_stmt: IF LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 90


State 85

   26 while_stmt: WHILE LPAREN expr RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 91


State 86

   21 assignment_stmt: ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 21 (assignment_stmt)


State 87

   46 func_call: ID LPAREN arg_list_opt RPAREN •

    $default  reduce using rule 46 (func_call)


State 88

   50 arg_list: arg_list COMMA • expr

    LPAREN     shift, and go to state 39
    ID         shift, and go to state 40
    INT_LIT    shift, and go to state 41
    FLOAT_LIT  shift, and go to state 42

    expr       go to state 92
    func_call  go to state 44


State 89

   20 var_decl_stmt: type ID ARROW_LEFT expr • SEMICOLON
   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr

    PLUS       shift, and go to state 53
    MINUS      shift, and go to state 54
    MUL        shift, and go to state 55
    DIV        shift, and go to state 56
    LT         shift, and go to state 57
    LE         shift, and go to state 58
    GT         shift, and go to state 59
    GE         shift, and go to state 60
    EQ         shift, and go to state 61
    NE         shift, and go to state 62
    SEMICOLON  shift, and go to state 93


State 90

   25 if_stmt: IF LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 94


State 91

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 95


State 92

   31 expr: expr • PLUS expr
   32     | expr • MINUS expr
   33     | expr • MUL expr
   34     | expr • DIV expr
   35     | expr • LT expr
   36     | expr • LE expr
   37     | expr • GT expr
   38     | expr • GE expr
   39     | expr • EQ expr
   40     | expr • NE expr
   50 arg_list: arg_list COMMA expr •

    PLUS   shift, and go to state 53
    MINUS  shift, and go to state 54
    MUL    shift, and go to state 55
    DIV    shift, and go to state 56
    LT     shift, and go to state 57
    LE     shift, and go to state 58
    GT     shift, and go to state 59
    GE     shift, and go to state 60
    EQ     shift, and go to state 61
    NE     shift, and go to state 62

    $default  reduce using rule 50 (arg_list)


State 93

   20 var_decl_stmt: type ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 20 (var_decl_stmt)


State 94

   11 stmt_list: stmt_list • stmt
   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    PRINT     shift, and go to state 23
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    RBRACE    shift, and go to state 96
    ID        shift, and go to state 28

    stmt             go to state 29
    var_decl_stmt    go to state 30
    assignment_stmt  go to state 31
    func_call_stmt   go to state 32
    print_stmt       go to state 33
    return_stmt      go to state 34
    if_stmt          go to state 35
    while_stmt       go to state 36
    type             go to state 37
    func_call        go to state 38


State 95

   11 stmt_list: stmt_list • stmt
   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list • RBRACE

    UNIT      shift, and go to state 1
    FLOAT     shift, and go to state 2
    INT       shift, and go to state 3
    RATIONAL  shift, and go to state 4
    PRINT     shift, and go to state 23
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    RBRACE    shift, and go to state 97
    ID        shift, and go to state 28

    stmt             go to state 29
    var_decl_stmt    go to state 30
    assignment_stmt  go to state 31
    func_call_stmt   go to state 32
    print_stmt       go to state 33
    return_stmt      go to state 34
    if_stmt          go to state 35
    while_stmt       go to state 36
    type             go to state 37
    func_call        go to state 38


State 96

   25 if_stmt: IF LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 25 (if_stmt)


State 97

   26 while_stmt: WHILE LPAREN expr RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 26 (while_stmt)
