Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: func_decl
    3          | decl_list func_decl

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    5 param_list_opt: ε
    6               | param_list

    7 param_list: param
    8           | param_list COMMA param

    9 param: type ID

   10 stmt_list: ε
   11          | stmt_list stmt

   12 stmt: var_decl_stmt
   13     | assignment_stmt
   14     | print_stmt
   15     | return_stmt
   16     | func_call_stmt

   17 var_decl_stmt: type ID SEMICOLON
   18              | type ID ARROW_LEFT expr SEMICOLON

   19 assignment_stmt: ID ARROW_LEFT expr SEMICOLON

   20 func_call_stmt: func_call SEMICOLON

   21 print_stmt: PRINT expr SEMICOLON

   22 return_stmt: RETURN expr SEMICOLON

   23 type: UNIT
   24     | FLOAT
   25     | INT

   26 expr: expr PLUS expr
   27     | expr MINUS expr
   28     | expr MUL expr
   29     | expr DIV expr
   30     | LPAREN expr RPAREN
   31     | ID
   32     | INT_LIT
   33     | FLOAT_LIT
   34     | func_call

   35 func_call: ID LPAREN arg_list_opt RPAREN

   36 arg_list_opt: ε
   37             | arg_list

   38 arg_list: expr
   39         | arg_list COMMA expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    UNIT (258) 23
    FLOAT (259) 24
    INT (260) 25
    PRINT (261) 21
    RETURN (262) 22
    ARROW_LEFT (263) 18 19
    SEMICOLON (264) 17 18 19 20 21 22
    LPAREN (265) 4 30 35
    RPAREN (266) 4 30 35
    LBRACE (267) 4
    RBRACE (268) 4
    COMMA (269) 8 39
    PLUS (270) 26
    MINUS (271) 27
    MUL (272) 28
    DIV (273) 29
    ID <str_val> (274) 4 9 17 18 19 31 35
    INT_LIT <int_val> (275) 32
    FLOAT_LIT <float_val> (276) 33


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    program <rec> (23)
        on left: 1
        on right: 0
    decl_list <rec> (24)
        on left: 2 3
        on right: 1 3
    func_decl <rec> (25)
        on left: 4
        on right: 2 3
    param_list_opt <rec> (26)
        on left: 5 6
        on right: 4
    param_list <rec> (27)
        on left: 7 8
        on right: 6 8
    param <rec> (28)
        on left: 9
        on right: 7 8
    stmt_list <rec> (29)
        on left: 10 11
        on right: 4 11
    stmt <rec> (30)
        on left: 12 13 14 15 16
        on right: 11
    var_decl_stmt <rec> (31)
        on left: 17 18
        on right: 12
    assignment_stmt <rec> (32)
        on left: 19
        on right: 13
    func_call_stmt <rec> (33)
        on left: 20
        on right: 16
    print_stmt <rec> (34)
        on left: 21
        on right: 14
    return_stmt <rec> (35)
        on left: 22
        on right: 15
    type <rec> (36)
        on left: 23 24 25
        on right: 4 9 17 18
    expr <rec> (37)
        on left: 26 27 28 29 30 31 32 33 34
        on right: 18 19 21 22 26 27 28 29 30 38 39
    func_call <rec> (38)
        on left: 35
        on right: 20 34
    arg_list_opt <rec> (39)
        on left: 36 37
        on right: 35
    arg_list <rec> (40)
        on left: 38 39
        on right: 37 39


State 0

    0 $accept: • program $end

    UNIT   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    program    go to state 4
    decl_list  go to state 5
    func_decl  go to state 6
    type       go to state 7


State 1

   23 type: UNIT •

    $default  reduce using rule 23 (type)


State 2

   24 type: FLOAT •

    $default  reduce using rule 24 (type)


State 3

   25 type: INT •

    $default  reduce using rule 25 (type)


State 4

    0 $accept: program • $end

    $end  shift, and go to state 8


State 5

    1 program: decl_list •
    3 decl_list: decl_list • func_decl

    UNIT   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 1 (program)

    func_decl  go to state 9
    type       go to state 7


State 6

    2 decl_list: func_decl •

    $default  reduce using rule 2 (decl_list)


State 7

    4 func_decl: type • ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    ID  shift, and go to state 10


State 8

    0 $accept: program $end •

    $default  accept


State 9

    3 decl_list: decl_list func_decl •

    $default  reduce using rule 3 (decl_list)


State 10

    4 func_decl: type ID • LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE

    LPAREN  shift, and go to state 11


State 11

    4 func_decl: type ID LPAREN • param_list_opt RPAREN LBRACE stmt_list RBRACE

    UNIT   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    $default  reduce using rule 5 (param_list_opt)

    param_list_opt  go to state 12
    param_list      go to state 13
    param           go to state 14
    type            go to state 15


State 12

    4 func_decl: type ID LPAREN param_list_opt • RPAREN LBRACE stmt_list RBRACE

    RPAREN  shift, and go to state 16


State 13

    6 param_list_opt: param_list •
    8 param_list: param_list • COMMA param

    COMMA  shift, and go to state 17

    $default  reduce using rule 6 (param_list_opt)


State 14

    7 param_list: param •

    $default  reduce using rule 7 (param_list)


State 15

    9 param: type • ID

    ID  shift, and go to state 18


State 16

    4 func_decl: type ID LPAREN param_list_opt RPAREN • LBRACE stmt_list RBRACE

    LBRACE  shift, and go to state 19


State 17

    8 param_list: param_list COMMA • param

    UNIT   shift, and go to state 1
    FLOAT  shift, and go to state 2
    INT    shift, and go to state 3

    param  go to state 20
    type   go to state 15


State 18

    9 param: type ID •

    $default  reduce using rule 9 (param)


State 19

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE • stmt_list RBRACE

    $default  reduce using rule 10 (stmt_list)

    stmt_list  go to state 21


State 20

    8 param_list: param_list COMMA param •

    $default  reduce using rule 8 (param_list)


State 21

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list • RBRACE
   11 stmt_list: stmt_list • stmt

    UNIT    shift, and go to state 1
    FLOAT   shift, and go to state 2
    INT     shift, and go to state 3
    PRINT   shift, and go to state 22
    RETURN  shift, and go to state 23
    RBRACE  shift, and go to state 24
    ID      shift, and go to state 25

    stmt             go to state 26
    var_decl_stmt    go to state 27
    assignment_stmt  go to state 28
    func_call_stmt   go to state 29
    print_stmt       go to state 30
    return_stmt      go to state 31
    type             go to state 32
    func_call        go to state 33


State 22

   21 print_stmt: PRINT • expr SEMICOLON

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 38
    func_call  go to state 39


State 23

   22 return_stmt: RETURN • expr SEMICOLON

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 40
    func_call  go to state 39


State 24

    4 func_decl: type ID LPAREN param_list_opt RPAREN LBRACE stmt_list RBRACE •

    $default  reduce using rule 4 (func_decl)


State 25

   19 assignment_stmt: ID • ARROW_LEFT expr SEMICOLON
   35 func_call: ID • LPAREN arg_list_opt RPAREN

    ARROW_LEFT  shift, and go to state 41
    LPAREN      shift, and go to state 42


State 26

   11 stmt_list: stmt_list stmt •

    $default  reduce using rule 11 (stmt_list)


State 27

   12 stmt: var_decl_stmt •

    $default  reduce using rule 12 (stmt)


State 28

   13 stmt: assignment_stmt •

    $default  reduce using rule 13 (stmt)


State 29

   16 stmt: func_call_stmt •

    $default  reduce using rule 16 (stmt)


State 30

   14 stmt: print_stmt •

    $default  reduce using rule 14 (stmt)


State 31

   15 stmt: return_stmt •

    $default  reduce using rule 15 (stmt)


State 32

   17 var_decl_stmt: type • ID SEMICOLON
   18              | type • ID ARROW_LEFT expr SEMICOLON

    ID  shift, and go to state 43


State 33

   20 func_call_stmt: func_call • SEMICOLON

    SEMICOLON  shift, and go to state 44


State 34

   30 expr: LPAREN • expr RPAREN

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 45
    func_call  go to state 39


State 35

   31 expr: ID •
   35 func_call: ID • LPAREN arg_list_opt RPAREN

    LPAREN  shift, and go to state 42

    $default  reduce using rule 31 (expr)


State 36

   32 expr: INT_LIT •

    $default  reduce using rule 32 (expr)


State 37

   33 expr: FLOAT_LIT •

    $default  reduce using rule 33 (expr)


State 38

   21 print_stmt: PRINT expr • SEMICOLON
   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr

    SEMICOLON  shift, and go to state 46
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    MUL        shift, and go to state 49
    DIV        shift, and go to state 50


State 39

   34 expr: func_call •

    $default  reduce using rule 34 (expr)


State 40

   22 return_stmt: RETURN expr • SEMICOLON
   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr

    SEMICOLON  shift, and go to state 51
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    MUL        shift, and go to state 49
    DIV        shift, and go to state 50


State 41

   19 assignment_stmt: ID ARROW_LEFT • expr SEMICOLON

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 52
    func_call  go to state 39


State 42

   35 func_call: ID LPAREN • arg_list_opt RPAREN

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    $default  reduce using rule 36 (arg_list_opt)

    expr          go to state 53
    func_call     go to state 39
    arg_list_opt  go to state 54
    arg_list      go to state 55


State 43

   17 var_decl_stmt: type ID • SEMICOLON
   18              | type ID • ARROW_LEFT expr SEMICOLON

    ARROW_LEFT  shift, and go to state 56
    SEMICOLON   shift, and go to state 57


State 44

   20 func_call_stmt: func_call SEMICOLON •

    $default  reduce using rule 20 (func_call_stmt)


State 45

   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr
   30     | LPAREN expr • RPAREN

    RPAREN  shift, and go to state 58
    PLUS    shift, and go to state 47
    MINUS   shift, and go to state 48
    MUL     shift, and go to state 49
    DIV     shift, and go to state 50


State 46

   21 print_stmt: PRINT expr SEMICOLON •

    $default  reduce using rule 21 (print_stmt)


State 47

   26 expr: expr PLUS • expr

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 59
    func_call  go to state 39


State 48

   27 expr: expr MINUS • expr

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 60
    func_call  go to state 39


State 49

   28 expr: expr MUL • expr

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 61
    func_call  go to state 39


State 50

   29 expr: expr DIV • expr

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 62
    func_call  go to state 39


State 51

   22 return_stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 22 (return_stmt)


State 52

   19 assignment_stmt: ID ARROW_LEFT expr • SEMICOLON
   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr

    SEMICOLON  shift, and go to state 63
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    MUL        shift, and go to state 49
    DIV        shift, and go to state 50


State 53

   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr
   38 arg_list: expr •

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50

    $default  reduce using rule 38 (arg_list)


State 54

   35 func_call: ID LPAREN arg_list_opt • RPAREN

    RPAREN  shift, and go to state 64


State 55

   37 arg_list_opt: arg_list •
   39 arg_list: arg_list • COMMA expr

    COMMA  shift, and go to state 65

    $default  reduce using rule 37 (arg_list_opt)


State 56

   18 var_decl_stmt: type ID ARROW_LEFT • expr SEMICOLON

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 66
    func_call  go to state 39


State 57

   17 var_decl_stmt: type ID SEMICOLON •

    $default  reduce using rule 17 (var_decl_stmt)


State 58

   30 expr: LPAREN expr RPAREN •

    $default  reduce using rule 30 (expr)


State 59

   26 expr: expr • PLUS expr
   26     | expr PLUS expr •
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr

    MUL  shift, and go to state 49
    DIV  shift, and go to state 50

    $default  reduce using rule 26 (expr)


State 60

   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   27     | expr MINUS expr •
   28     | expr • MUL expr
   29     | expr • DIV expr

    MUL  shift, and go to state 49
    DIV  shift, and go to state 50

    $default  reduce using rule 27 (expr)


State 61

   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   28     | expr MUL expr •
   29     | expr • DIV expr

    $default  reduce using rule 28 (expr)


State 62

   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr
   29     | expr DIV expr •

    $default  reduce using rule 29 (expr)


State 63

   19 assignment_stmt: ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 19 (assignment_stmt)


State 64

   35 func_call: ID LPAREN arg_list_opt RPAREN •

    $default  reduce using rule 35 (func_call)


State 65

   39 arg_list: arg_list COMMA • expr

    LPAREN     shift, and go to state 34
    ID         shift, and go to state 35
    INT_LIT    shift, and go to state 36
    FLOAT_LIT  shift, and go to state 37

    expr       go to state 67
    func_call  go to state 39


State 66

   18 var_decl_stmt: type ID ARROW_LEFT expr • SEMICOLON
   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr

    SEMICOLON  shift, and go to state 68
    PLUS       shift, and go to state 47
    MINUS      shift, and go to state 48
    MUL        shift, and go to state 49
    DIV        shift, and go to state 50


State 67

   26 expr: expr • PLUS expr
   27     | expr • MINUS expr
   28     | expr • MUL expr
   29     | expr • DIV expr
   39 arg_list: arg_list COMMA expr •

    PLUS   shift, and go to state 47
    MINUS  shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50

    $default  reduce using rule 39 (arg_list)


State 68

   18 var_decl_stmt: type ID ARROW_LEFT expr SEMICOLON •

    $default  reduce using rule 18 (var_decl_stmt)
